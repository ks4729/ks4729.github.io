# Simple workflow for deploying static content to GitHub Pages
name: Update Spotify Content

on:
  # Runs on the first of every month
  schedule:
    - cron: "0 0 1 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow writing content
permissions:
  contents: write
  id-token: write

# Cancels other actions in progress
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  #retrieve data from Spotify and write to file
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          
      - name: Retrieve new Spotify Access Token
        run: |
          echo Retreiving token...
          accessToken=$(curl -X POST -H "Authorization: Basic ${{secrets.ENCODED_HEADER}}" -d grant_type=refresh_token -d refresh_token=${{secrets.REFRESH_TOKEN}} https://accounts.spotify.com/api/token | cut -d \" -f 4)
          echo "spotifyData = " > spotify/spotifyObject.js
          echo Writing tracks to spotifyObject.js
          curl --request GET \
            'https://api.spotify.com/v1/me/top/tracks?limit=10&time_range=short_term' \
            --header "Authorization: Bearer $accessToken" \
            --header 'Content-Type: application/json' >> spotify/spotifyObject.js
      - name: Commit and push changes
        run: |
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git add --all
          git commit -m 'Retreived data from Spotify'
          git push origin -f
